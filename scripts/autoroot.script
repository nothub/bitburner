//available exploits
var numPortsPwnable = fileExists("BruteSSH.exe", "home") + fileExists("FTPCrack.exe", "home") + fileExists("RelaySMTP.exe", "home") + fileExists("HTTPWorm.exe", "home") + fileExists("SQLInject.exe", "home");

//first level scan
var targets = scan(hostname, true);

//define uniqueness filter for recursive scan
function unique(item) {
    return targets.indexOf(item) < 0;
}

//loop through each hostname in targets
for (var i = 0; i < targets.length; i++) {

    var hostname = targets[i];

    if (hostname === "home") {
        continue;
    }

    if (fileExists("worker.txt", hostname)) {
        continue;
    }

    if (getServerNumPortsRequired(hostname) > numPortsPwnable) {
        continue;
    }

    if (!hasRootAccess(hostname)) {
        if (fileExists("BruteSSH.exe", "home")) { brutessh(hostname) }
        if (fileExists("FTPCrack.exe", "home")) { ftpcrack(hostname) }
        if (fileExists("RelaySMTP.exe", "home")) { relaysmtp(hostname) }
        if (fileExists("HTTPWorm.exe", "home")) { httpworm(hostname) }
        if (fileExists("SQLInject.exe", "home")) { sqlinject(hostname) }
        nuke(hostname);
    }

    if (hasRootAccess(hostname)) {

        //add to db
        write("server-db.txt", hostname + "\n", "a");

        //drop payload
        exec("payload-helper.script", "home", 1, hostname);
        //killall(hostname);
        //scp("hackself.script", "home", hostname);
        //exec("hackself.script", hostname);

        //recursive scan
        var newtargets = scan(hostname, true).filter(unique);
        var targets = targets.concat(newtargets);

    }

}
